name: Continuous Integration

on:
  push:
    branches: [ main ]
    tags:
      - v*
  pull_request:
    branches: [ main ]

jobs:
  backend-build: 
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-haskell@v1
      with:
        ghc-version: '8.6.5'
        enable-stack: true
        stack-version: 'latest'

    - name: Cache
      uses: actions/cache@v1
      env:
        cache-name: cache-stack
      with:
        path: ~/.stack
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.cabal') }}-${{ hashFiles('package.yaml') }}-${{ hashFiles('stack.yaml') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Install dependencies
      run: stack setup
    - name: Build
      run: stack build
    - name: Run tests
      run: stack test

  frontend-build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.x 
    - run: npm i -g create-elm-app
    - run: cd frontend && elm-app test


  acceptance-tests:
    needs: [backend-build, frontend-build]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Restore Stack Cache
      uses: actions/cache@v1
      env:
        cache-name: cache-stack
      with:
        path: ~/.stack
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.cabal') }}-${{ hashFiles('package.yaml') }}-${{ hashFiles('stack.yaml') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Use Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.x 

    - run: npm i -g create-elm-app

    - run: cd e2e && npm ci
    - run: node run-e2e.js
  
  docker-image:
    needs: acceptance-tests

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: bspaulding/password
        tag_with_ref: true

